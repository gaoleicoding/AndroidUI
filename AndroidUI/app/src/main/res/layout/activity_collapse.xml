<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!--AppBarLayout的大小其实就是那个大图的大小-->
        <com.google.android.material.appbar.AppBarLayout
            android:id="@+id/app_bar"
            android:layout_width="match_parent"
            android:layout_height="240dp">

            <com.google.android.material.appbar.CollapsingToolbarLayout
                android:id="@+id/main3_CollapsingToolbarLayout"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:contentScrim="#ffffff"
                app:layout_scrollFlags="scroll|exitUntilCollapsed">

                <!--
                app:contentScrim="#30469b"//设置当完全CollapsingToolbarLayout折叠(收缩)后的背景颜色。
        app:expandedTitleMarginStart="48dp"//设置扩张时候(还没有收缩时)title向左填充的距离。
                layout_scrollFlags中的几个值：
            scroll: 所有想滚动出屏幕的view都需要设置这个flag， 没有设置这个flag的view将被固定在屏幕顶部。
            enterAlways:这个flag让任意向下的滚动都会导致该view变为可见，启用快速“返回模式”。
            enterAlwaysCollapsed:当你的视图已经设置minHeight属性又使用此标志时，你的视图只能已最小高度进入，只有当滚动视图到达顶部时才扩大到完整高度。
            exitUntilCollapsed:滚动退出屏幕，最后折叠在顶端。-->

                <ImageView
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:scaleType="centerCrop"
                    android:src="@mipmap/football"
                    app:layout_collapseMode="parallax"
                    app:layout_collapseParallaxMultiplier="0.7" />
                <!--app:layout_collapseMode="parallax"//设置为这个模式时，在内容滚动时，CollapsingToolbarLayout中的View（比如ImageView)也可以同时滚动，实现视差滚动效果，通常和layout_collapseParallaxMultiplier(设置视差因子)搭配使用。
        app:layout_collapseParallaxMultiplier="0.7"//设置视差滚动因子，值为：0~1。
        -->
                <androidx.appcompat.widget.Toolbar
                    android:id="@+id/main3_toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="?attr/actionBarSize"
                    android:fitsSystemWindows="true"
                    app:layout_collapseMode="pin" />
                <!--pin设置为这个模式时，当CollapsingToolbarLayout完全收缩后，Toolbar还可以保留在屏幕上。-->


            </com.google.android.material.appbar.CollapsingToolbarLayout>

        </com.google.android.material.appbar.AppBarLayout>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="#ffffff"
            android:orientation="vertical"
            app:layout_behavior="@string/appbar_scrolling_view_behavior">
            <!--这里要用NestedScrollView而不是ScrollView
            ScrollView 没有被设计成与 CoordinatorLayout 协同工作。你需要另一个 view：NestedScrollView，
            这个 NestedScrollView 设计出来的目的就是为了与 CoordinatorLayout 协同工作的。
    同样的原因，请注意了： ListView 类也是和 CoordinatorLayout 不能协同工作的。只有RecyclerView可以。-->
            <androidx.core.widget.NestedScrollView
                android:layout_width="match_parent"
                android:layout_height="match_parent">

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:gravity="center_horizontal"
                    android:text="1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n11\n1\n1\n1\n1\n1\n1\n1\n1\n1\n11\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
                    android:textColor="#000000"
                    android:textSize="60sp" />

            </androidx.core.widget.NestedScrollView>
        </LinearLayout>
    </androidx.coordinatorlayout.widget.CoordinatorLayout>

</LinearLayout>